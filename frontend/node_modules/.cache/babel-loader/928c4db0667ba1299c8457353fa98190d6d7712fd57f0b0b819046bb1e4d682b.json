{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhon\\\\Documents\\\\8vo\\\\Aplicaciones\\\\proyecto\\\\programa\\\\project-root\\\\frontend\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getRecommendations } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [referenceTime, setReferenceTime] = useState(\"\");\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchRecommendations = async () => {\n    try {\n      setError(null);\n      const data = await getRecommendations(referenceTime);\n      console.log(data); // Verifica la estructura aquí\n      setRecommendations(data.recommended_recipes);\n    } catch (err) {\n      setError(\"Error fetching recommendations. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Get Recipe Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter reference time (mins)\",\n      value: referenceTime,\n      onChange: e => setReferenceTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRecommendations,\n      children: \"Fetch Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recommendations.map((recipe, index) => {\n        // Reemplazar comillas simples por comillas dobles antes de parsear\n        const ingredients = JSON.parse(recipe.ingredients.replace(/'/g, '\"') || \"[]\");\n        const tags = JSON.parse(recipe.tags.replace(/'/g, '\"') || \"[]\");\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", recipe.predicted_time.toFixed(2), \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tags: \", tags.length > 0 ? tags.join(\", \") : \"No tags available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ingredients: \", ingredients.length > 0 ? ingredients.join(\", \") : \"No ingredients available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Steps: \", recipe.steps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"r+0j9fMxY6urmS2l6v7SwIuj2p8=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","getRecommendations","jsxDEV","_jsxDEV","Recommendations","_s","referenceTime","setReferenceTime","recommendations","setRecommendations","error","setError","fetchRecommendations","data","console","log","recommended_recipes","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","map","recipe","index","ingredients","JSON","parse","replace","tags","name","predicted_time","toFixed","length","join","steps","_c","$RefreshReg$"],"sources":["C:/Users/Jhon/Documents/8vo/Aplicaciones/proyecto/programa/project-root/frontend/src/components/Recommendations.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getRecommendations } from \"../utils/api\";\r\n\r\nconst Recommendations = () => {\r\n  const [referenceTime, setReferenceTime] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchRecommendations = async () => {\r\n    try {\r\n      setError(null);\r\n      const data = await getRecommendations(referenceTime);\r\n      console.log(data); // Verifica la estructura aquí\r\n      setRecommendations(data.recommended_recipes);\r\n    } catch (err) {\r\n      setError(\"Error fetching recommendations. Please try again.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Get Recipe Recommendations</h2>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter reference time (mins)\"\r\n        value={referenceTime}\r\n        onChange={(e) => setReferenceTime(e.target.value)}\r\n      />\r\n      <button onClick={fetchRecommendations}>Fetch Recommendations</button>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n        <ul>\r\n            {recommendations.map((recipe, index) => {\r\n                // Reemplazar comillas simples por comillas dobles antes de parsear\r\n                const ingredients = JSON.parse(recipe.ingredients.replace(/'/g, '\"') || \"[]\");\r\n                const tags = JSON.parse(recipe.tags.replace(/'/g, '\"') || \"[]\");\r\n                \r\n                return (\r\n                <li key={index}>\r\n                    <h3>{recipe.name}</h3>\r\n                    <p>Time: {recipe.predicted_time.toFixed(2)} mins</p>\r\n                    <p>\r\n                    Tags: {tags.length > 0 ? tags.join(\", \") : \"No tags available\"}\r\n                    </p>\r\n                    <p>\r\n                    Ingredients: {ingredients.length > 0 ? ingredients.join(\", \") : \"No ingredients available\"}\r\n                    </p>\r\n                    <p>Steps: {recipe.steps}</p>\r\n                </li>\r\n                );\r\n            })}\r\n        </ul>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}